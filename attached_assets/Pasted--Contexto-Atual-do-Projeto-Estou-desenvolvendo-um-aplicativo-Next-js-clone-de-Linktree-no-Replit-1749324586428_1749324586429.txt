# Contexto Atual do Projeto:
Estou desenvolvendo um aplicativo Next.js (clone de Linktree) no Replit.
O layout visual está quase 100% pronto.
A integração com Supabase está configurada.
O **upload da foto de perfil para o Supabase Storage está FUNCIONANDO!** (a imagem é enviada e a URL é salva na tabela 'profiles' no Supabase).
O bucket 'avatars' no Supabase Storage está criado com políticas RLS de INSERT/UPDATE (para authenticated) e SELECT (para anon/public com 'bucket_id = 'avatars'').
A URL do meu projeto Supabase REAL é "https://vxquljeazujpsufkckhp.supabase.co" (configurada em NEXT_PUBLIC_SUPABASE_URL nos Secrets).
O next.config.js tem o domínio "vxquljeazujpsufkckhp.supabase.co" configurado em images.domains e 'unoptimized: true'.

# Problemas Atuais Críticos a Resolver (Prioridade Máxima da IA):

1.  **Problema PERSISTENTE e CRÍTICO: Exibição da Foto de Perfil na UI:**
    * **Sintoma:** A imagem de perfil NÃO APARECE na UI do aplicativo.
    * **Erro em console:** `406 (Not Acceptable)` ou `400 (Bad Request)` para a requisição da imagem.
    * **Domínio Incorreto no Erro:** A URL que dá erro ainda pode mostrar domínios de proxy do Replit (ex: `https://3e9d5788-...picard.replit.dev`), o que **NÃO É** meu domínio Supabase real.
    * **URL Direta Funciona:** A URL da imagem copiada diretamente do Supabase Storage (ex: `https://vxquljeazujpsufkckhp.supabase.co/.../avatar?token=...`) **FUNCIONA PERFEITAMENTE** quando colada em uma nova aba do navegador.
    * **Hipótese:** Problema de cache extremo ou interferência do ambiente Replit/Next.js que está alterando a URL ou bloqueando seu carregamento.

2.  **Erros de Compilação/Runtime que Impedem as Funcionalidades de Rodar:**
    * **NOVO ERRO:** `TypeError: (0 , _utils_profile__WEBPACK_IMPORTED_MODULE_2__.uploadProfilePicture) is not a function`
        * Local: `app/components/ChangeProfilePictureDialog.tsx` (linha 40).
        * Causa: A função `uploadProfilePicture` não está sendo exportada/importada corretamente ou foi renomeada/removida em `profile.ts`.
    * `TypeError: default.signInWithEmail is not a function`
    * `TypeError: Property 'creatorLinks' does not exist...` (EditableLinkItem)
    * `TypeError: (0 , _utils_profile__WEBPACK_IMPORTED_MODULE_4__.getUser) is not a function`
    * `Error: Cannot read properties of undefined (reading 'user')`
    * `A param property was accessed directly with 'params.creatorSlug'`
    * A IA deve corrigir TODOS esses erros para que o aplicativo seja totalmente funcional.

# Novas Funcionalidades Essenciais (MVP Linktree) a Implementar:

1.  **Edição de Perfil (Nome de Usuário, Nome Completo, Biografia):**
    * Adicionar campos de UI para `username`, `full_name`, `bio` na página de admin/perfil.
    * Implementar a lógica de busca dos dados atuais do perfil e de salvamento das atualizações na tabela `public.profiles` no Supabase (garantindo que o `username` seja único).
    * A interface deve ter um botão para salvar as alterações.

2.  **Feedback Visual Abrangente para o Usuário (Muito Importante para UX!):**
    * Para **LOGIN:** Mostrar "Login realizado com sucesso!" ou "E-mail/senha incorretos" / "Conta não confirmada".
    * Para **CADASTRO:** Mostrar "Cadastro realizado com sucesso! Verifique seu e-mail." ou "Este e-mail já está em uso" / "Nome de usuário já em uso" / "Erro ao cadastrar".
    * Para **ADICIONAR LINK:** Mostrar "Link adicionado com sucesso!" ou "Erro ao adicionar link".
    * Para **EDITAR LINK:** Mostrar "Link atualizado!" ou "Erro ao atualizar".
    * Para **EXCLUIR LINK:** Mostrar "Link removido!" ou "Erro ao remover".
    * Para **UPLOAD FOTO/EDIÇÃO PERFIL:** Mostrar "Foto atualizada!" / "Perfil salvo!" ou "Erro ao atualizar".
    * Essas mensagens devem ser claras e aparecer na interface do usuário (ex: abaixo do formulário, um pequeno alerta).

# Minha Tarefa para Você (Replit AI) - LIBERDADE TOTAL PARA RESOLVER E IMPLEMENTAR:

1.  **Prioridade Máxima:** Corrigir todos os erros de compilação/runtime para que o aplicativo seja funcional.
    * Isto inclui garantir que a foto de perfil **APAREÇA VISIVELMENTE** na UI (corrigindo a URL `406 Not Acceptable` e outras fontes de erro de imagem).
2.  **Implementar as funcionalidades de Edição de Perfil.**
3.  **Adicionar Feedback Visual Abrangente** para todas as ações do usuário (sucesso/erro/loading).
4.  **Mantenha o LAYOUT VISUAL EXISTENTE do site.** Faça apenas as modificações necessárias para adicionar os elementos de UI da nova funcionalidade (campos de edição, mensagens, botões) ou para corrigir problemas. **Não redesenhe a estrutura geral da página.**

5.  **Trate os Avisos de Compilação/Runtime (Warnings) e Code Health:**
    * Execute `npx update-browserslist-db@latest` e `npm audit fix --force` no Shell.
    * Trate o aviso de `Critical dependency` do Supabase Realtime.

6.  **Após as implementações, explique todas as mudanças feitas e por que elas resolvem os problemas,** incluindo instruções claras sobre como testar e quaisquer passos adicionais de limpeza/reinício que possam ser necessários.

# Restrições e Preferências:
- O site deve funcionar perfeitamente no ambiente Replit.
- Manter o layout visual existente.
- Garanta que todas as URLs usem variáveis de ambiente (Secrets) para o domínio Supabase.